@model solicitudMovimientosPcs.Models.PcMovimientosRequest
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Nueva Solicitud";

    var clases = ViewBag.Clases as IEnumerable<SelectListItem>;
    var ubicaciones = ViewBag.Ubicaciones as IEnumerable<SelectListItem>;
    var codMovs = ViewBag.CodMovs as IEnumerable<SelectListItem>;
    var estatus = ViewBag.Estatus as IEnumerable<SelectListItem>;
    var monedas = ViewBag.Monedas as IEnumerable<SelectListItem>;
    var lineas = ViewBag.Lineas as IEnumerable<SelectListItem>;

    var solicitanteActual = !string.IsNullOrWhiteSpace(Model?.Solicitante)
        ? Model.Solicitante
        : (User.FindFirst("DisplayName")?.Value ?? User.Identity?.Name ?? "");
}

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0"><i class="fas fa-plus-circle me-2"></i>Nueva Solicitud</h4>
    </div>
    <div class="card-body">

        <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>

        <form asp-action="Create" method="post">
            @Html.AntiForgeryToken()

            <div class="row g-3">
                <div class="col-md-3">
                    <label asp-for="Fecha" class="form-label">Fecha</label>
                    <input asp-for="Fecha" class="form-control" type="datetime-local" />
                    <span asp-validation-for="Fecha" class="text-danger"></span>
                </div>

                <!-- SOLICITANTE: readonly + oculto -->
                <div class="col-md-3">
                    <label class="form-label">Solicitante</label>
                    <input class="form-control" value="@solicitanteActual" readonly />
                    <input type="hidden" name="Solicitante" value="@solicitanteActual" />
                </div>

                <div class="col-md-3">
                    <label asp-for="Departamento" class="form-label">Departamento</label>
                    <input asp-for="Departamento" class="form-control" />
                    <span asp-validation-for="Departamento" class="text-danger"></span>
                </div>

                <!-- LÍNEA desde PC_MOVIMIENTOS_CODIGO_LINEA -->
                <div class="col-md-3">
                    <label asp-for="Linea" class="form-label">Línea</label>
                    <select asp-for="Linea" class="form-select" asp-items="lineas">
                        <option value="">-- Selecciona --</option>
                    </select>
                    <span asp-validation-for="Linea" class="text-danger"></span>
                </div>

                <div class="col-12">
                    <label asp-for="Comentarios" class="form-label">Comentarios</label>
                    <textarea asp-for="Comentarios" class="form-control" rows="2"></textarea>
                </div>

                <div class="col-md-3">
                    <label asp-for="Urgencia" class="form-label">Urgencia</label>
                    <select asp-for="Urgencia" class="form-select" asp-items="Html.GetEnumSelectList<Urgencia>()"></select>
                    <span asp-validation-for="Urgencia" class="text-danger"></span>
                </div>
            </div>

            <hr class="my-4" />

            <div class="d-flex align-items-center justify-content-between mb-2">
                <h5 class="mb-0"><i class="fas fa-boxes-stacked me-2"></i>Items</h5>
                <div class="d-flex gap-2">
                    <button type="button" id="dupLast" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-copy me-1"></i> Duplicar última fila
                    </button>
                    <button type="button" id="addItem" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-plus me-1"></i> Agregar item
                    </button>
                </div>
            </div>

            <!-- Plantillas ocultas para clonar opciones en filas nuevas -->
            <select id="tpl-clases" class="d-none">
                <option value=""></option>
                @if (clases != null)
                {
                    foreach (var o in clases)
                    {
                        <option value="@o.Value">@o.Text</option>
                    }
                }
            </select>
            <select id="tpl-ubicaciones" class="d-none">
                <option value=""></option>
                @if (ubicaciones != null)
                {
                    foreach (var o in ubicaciones)
                    {
                        <option value="@o.Value">@o.Text</option>
                    }
                }
            </select>
            <select id="tpl-codmovs" class="d-none">
                <option value=""></option>
                @if (codMovs != null)
                {
                    foreach (var o in codMovs)
                    {
                        <option value="@o.Value">@o.Text</option>
                    }
                }
            </select>
            <select id="tpl-estatus" class="d-none">
                <option value=""></option>
                @if (estatus != null)
                {
                    foreach (var o in estatus)
                    {
                        <option value="@o.Value">@o.Text</option>
                    }
                }
            </select>
            <select id="tpl-monedas" class="d-none">
                <option value=""></option>
                @if (monedas != null)
                {
                    foreach (var o in monedas)
                    {
                        <option value="@o.Value">@o.Text</option>
                    }
                }
            </select>

            <div class="table-responsive">
                <table class="table table-sm align-middle" id="itemsTable">
                    <thead class="table-light">
                        <tr>
                            <th rowspan="2" style="min-width:70px">No.</th>
                            <th rowspan="2" style="min-width:140px">Núm. Parte</th>
                            <th rowspan="2" style="min-width:180px">Descripción</th>
                            <th rowspan="2" style="min-width:120px">Case</th>
                            <th rowspan="2" style="min-width:240px">CodMov</th>
                            <th colspan="4" class="text-center">Ahora</th>
                            <th colspan="4" class="text-center">Después</th>
                            <th rowspan="2">Moneda</th>
                            <th rowspan="2">Costo U</th>
                            <th rowspan="2">Diferencia</th>
                            <th rowspan="2">Total</th>
                        </tr>
                        <tr>
                            <th>Clase A</th>
                            <th>Ubic A</th>
                            <th>Cant A</th>
                            <th>Estatus A</th>

                            <th>Clase D</th>
                            <th>Ubic D</th>
                            <th>Cant D</th>
                            <th>Estatus D</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <tr>
                                <td><input class="form-control" asp-for="Items[@i].Numero" /></td>
                                <td><input class="form-control" asp-for="Items[@i].NumParte" /></td>
                                <td><input class="form-control" asp-for="Items[@i].Descripcion" /></td>
                                <td><input class="form-control" asp-for="Items[@i].Case" /></td>

                                <td>
                                    <select class="form-select" asp-for="Items[@i].CodMov" asp-items="codMovs">
                                        <option value=""></option>
                                    </select>
                                </td>

                                <!-- AHORA -->
                                <td>
                                    <select class="form-select" asp-for="Items[@i].ClaseA" asp-items="clases">
                                        <option value=""></option>
                                    </select>
                                </td>
                                <td>
                                    <select class="form-select" asp-for="Items[@i].UbicacionA" asp-items="ubicaciones">
                                        <option value=""></option>
                                    </select>
                                </td>
                                <td><input class="form-control qtyA" asp-for="Items[@i].CantidadA" type="number" step="0.01" /></td>
                                <td>
                                    <select class="form-select" asp-for="Items[@i].EstatusA" asp-items="estatus">
                                        <option value=""></option>
                                    </select>
                                </td>

                                <!-- DESPUÉS -->
                                <td>
                                    <select class="form-select" asp-for="Items[@i].ClaseD" asp-items="clases">
                                        <option value=""></option>
                                    </select>
                                </td>
                                <td>
                                    <select class="form-select" asp-for="Items[@i].UbicacionD" asp-items="ubicaciones">
                                        <option value=""></option>
                                    </select>
                                </td>
                                <td><input class="form-control qtyD" asp-for="Items[@i].CantidadD" type="number" step="0.01" /></td>
                                <td>
                                    <select class="form-select" asp-for="Items[@i].EstatusD" asp-items="estatus">
                                        <option value=""></option>
                                    </select>
                                </td>

                                <td>
                                    <select class="form-select" asp-for="Items[@i].Moneda" asp-items="monedas">
                                        <option value=""></option>
                                    </select>
                                </td>
                                <td><input class="form-control costU" asp-for="Items[@i].CostoU" type="number" step="0.01" /></td>
                                <td><input class="form-control diff" asp-for="Items[@i].Diferencia" type="number" step="0.01" readonly /></td>
                                <td><input class="form-control total" asp-for="Items[@i].Total" type="number" step="0.01" readonly /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="text-end">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i> Guardar
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
            let idx = @Model.Items.Count;

            const tpl = {
                clases: document.getElementById('tpl-clases').innerHTML,
                ubics:  document.getElementById('tpl-ubicaciones').innerHTML,
                cods:   document.getElementById('tpl-codmovs').innerHTML,
                est:    document.getElementById('tpl-estatus').innerHTML,
                mon:    document.getElementById('tpl-monedas').innerHTML
            };

            const tableBody = document.querySelector('#itemsTable tbody');

            function toNum(v) { return parseFloat((v || '0').toString().replace(',', '.')) || 0 }

            function recalcRow(tr) {
                const qtyA = toNum(tr.querySelector('.qtyA')?.value);
                const qtyD = toNum(tr.querySelector('.qtyD')?.value);
                const cost = toNum(tr.querySelector('.costU')?.value);

                const diff = qtyD - qtyA;
                const qtyBase = (qtyD || qtyA);
                const total = cost * qtyBase;

                const diffInput = tr.querySelector('.diff');
                const totalInput = tr.querySelector('.total');
                if (diffInput)  diffInput.value  = diff.toFixed(2);
                if (totalInput) totalInput.value = total.toFixed(2);
            }

            // Siguiente valor para "Numero"
            function nextNumero(prefill){
                if (prefill && prefill.Numero){
                    const n = parseInt(prefill.Numero, 10);
                    return (isNaN(n) ? 0 : n) + 1;
                }
                const last = document.querySelector('#itemsTable tbody tr:last-child input[name$=".Numero"]');
                const ln = last ? parseInt(last.value, 10) : 0;
                return (isNaN(ln) ? 0 : ln) + 1;
            }

            // --- Helpers para crear/llenar filas ---
            function addRow(prefill) {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                  <td><input class="form-control" name="Items[${idx}].Numero" type="number" value="${nextNumero(prefill)}" /></td>
                  <td><input class="form-control" name="Items[${idx}].NumParte" /></td>
                  <td><input class="form-control" name="Items[${idx}].Descripcion" /></td>
                  <td><input class="form-control" name="Items[${idx}].Case" /></td>

                  <td><select class="form-select" name="Items[${idx}].CodMov">${tpl.cods}</select></td>

                  <!-- AHORA -->
                  <td><select class="form-select" name="Items[${idx}].ClaseA">${tpl.clases}</select></td>
                  <td><select class="form-select" name="Items[${idx}].UbicacionA">${tpl.ubics}</select></td>
                  <td><input class="form-control qtyA" name="Items[${idx}].CantidadA" type="number" step="0.01" /></td>
                  <td><select class="form-select" name="Items[${idx}].EstatusA">${tpl.est}</select></td>

                  <!-- DESPUÉS -->
                  <td><select class="form-select" name="Items[${idx}].ClaseD">${tpl.clases}</select></td>
                  <td><select class="form-select" name="Items[${idx}].UbicacionD">${tpl.ubics}</select></td>
                  <td><input class="form-control qtyD" name="Items[${idx}].CantidadD" type="number" step="0.01" /></td>
                  <td><select class="form-select" name="Items[${idx}].EstatusD">${tpl.est}</select></td>

                  <td><select class="form-select" name="Items[${idx}].Moneda">${tpl.mon}</select></td>
                  <td><input class="form-control costU" name="Items[${idx}].CostoU" type="number" step="0.01" /></td>
                  <td><input class="form-control diff"  name="Items[${idx}].Diferencia" type="number" step="0.01" readonly /></td>
                  <td><input class="form-control total" name="Items[${idx}].Total"      type="number" step="0.01" readonly /></td>
                `;
                tableBody.appendChild(tr);

                // Si hay prefill, setea los demás valores idénticos a la fila anterior (Número ya se incrementó)
                if (prefill) {
                    setVal(tr, 'NumParte',    prefill.NumParte);
                    setVal(tr, 'Descripcion', prefill.Descripcion);
                    setVal(tr, 'Case',        prefill.Case);

                    setSel(tr, 'CodMov',      prefill.CodMov);

                    setSel(tr, 'ClaseA',      prefill.ClaseA);
                    setSel(tr, 'UbicacionA',  prefill.UbicacionA);
                    setVal(tr, 'CantidadA',   prefill.CantidadA);
                    setSel(tr, 'EstatusA',    prefill.EstatusA);

                    setSel(tr, 'ClaseD',      prefill.ClaseD);
                    setSel(tr, 'UbicacionD',  prefill.UbicacionD);
                    setVal(tr, 'CantidadD',   prefill.CantidadD);
                    setSel(tr, 'EstatusD',    prefill.EstatusD);

                    setSel(tr, 'Moneda',      prefill.Moneda);
                    setVal(tr, 'CostoU',      prefill.CostoU);
                    setVal(tr, 'Diferencia',  prefill.Diferencia);
                    setVal(tr, 'Total',       prefill.Total);
                }

                recalcRow(tr);
                idx++;
                return tr;
            }

            function setVal(tr, field, value) {
                const el = tr.querySelector(`[name="Items[${idx}].${field}"]`);
                if (el) el.value = value ?? '';
            }
            function setSel(tr, field, value) {
                const el = tr.querySelector(`select[name="Items[${idx}].${field}"]`);
                if (el) el.value = value ?? '';
            }

            function getRowData(tr) {
                const val = n => tr.querySelector(`[name$="].${n}"]`)?.value ?? '';
                return {
                    Numero:     val('Numero'),
                    NumParte:   val('NumParte'),
                    Descripcion:val('Descripcion'),
                    Case:       val('Case'),
                    CodMov:     val('CodMov'),

                    ClaseA:     val('ClaseA'),
                    UbicacionA: val('UbicacionA'),
                    CantidadA:  val('CantidadA'),
                    EstatusA:   val('EstatusA'),

                    ClaseD:     val('ClaseD'),
                    UbicacionD: val('UbicacionD'),
                    CantidadD:  val('CantidadD'),
                    EstatusD:   val('EstatusD'),

                    Moneda:     val('Moneda'),
                    CostoU:     val('CostoU'),
                    Diferencia: val('Diferencia'),
                    Total:      val('Total')
                };
            }

            // Recalcular cuando cambian cantidades o costo
            tableBody.addEventListener('input', function (e) {
                if (e.target.matches('.qtyA, .qtyD, .costU')) {
                    const tr = e.target.closest('tr');
                    recalcRow(tr);
                }
            });

            // Agregar fila vacía (con Número correlativo)
            document.getElementById('addItem').addEventListener('click', function () {
                addRow(); // sin prefill → nextNumero(null) define el siguiente número
            });

            // Duplicar última fila (y Número incrementa)
            document.getElementById('dupLast').addEventListener('click', function () {
                const last = tableBody.querySelector('tr:last-child');
                if (!last) { addRow(); return; }
                const data = getRowData(last);
                addRow(data); // nueva fila con mismos valores, Número incrementado
            });

            // Recalcular filas iniciales por si vinieran con datos
            document.querySelectorAll('#itemsTable tbody tr').forEach(recalcRow);
        })();
    </script>
}
