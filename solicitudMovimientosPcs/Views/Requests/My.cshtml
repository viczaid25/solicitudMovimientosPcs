@model IEnumerable<solicitudMovimientosPcs.Models.PcMovimientosRequest>
@using solicitudMovimientosPcs.Models

@{
    ViewData["Title"] = "Mis solicitudes";
    var solicitante = ViewBag.Solicitante as string;
}

<h2 class="mb-3">
    Mis solicitudes
    @if (!string.IsNullOrWhiteSpace(solicitante))
    {
        <small class="text-muted">(@solicitante)</small>
    }
</h2>

<div class="d-flex gap-2 mb-3">
    <a asp-action="Create" class="btn btn-primary">Nueva solicitud</a>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">No hay solicitudes para mostrar.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>ID</th>
                    <th>Fecha</th>
                    <th>Departamento</th>
                    <th>Línea</th>
                    <th>Urgencia</th>
                    <th>Estatus</th>
                    <th class="text-end">Items</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in Model)
                {
                    <tr>
                        <td>@r.Id</td>
                        <td>@r.Fecha.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@r.Departamento</td>
                        <td>@r.Linea</td>
                        <td><span class="@BadgeForUrgencia(r.Urgencia)">@r.Urgencia</span></td>
                        <td><span class="@BadgeForStatus(r.RequestStatus)">@r.RequestStatus</span></td>
                        <td class="text-end">@((r.Items?.Count) ?? 0)</td>
                        <td class="text-end">
                            <a asp-action="Details" asp-route-id="@r.Id" class="btn btn-sm btn-outline-primary">Ver</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@functions {
    string BadgeForUrgencia(Urgencia u) => u switch
    {
        Urgencia.Critica => "badge bg-danger",
        Urgencia.Alta => "badge bg-warning text-dark",
        Urgencia.Media => "badge bg-info text-dark",
        _ => "badge bg-secondary"
    };

    string BadgeForStatus(RequestStatus s) => s switch
    {
        RequestStatus.Nuevo => "badge bg-secondary",
        RequestStatus.EnProceso => "badge bg-primary",
        RequestStatus.Completado => "badge bg-success",
        RequestStatus.Rechazado => "badge bg-danger",
        RequestStatus.Cancelado => "badge bg-dark",
        _ => "badge bg-light text-dark"
    };
}
